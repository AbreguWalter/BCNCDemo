plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
    id 'checkstyle'
}

group = 'com.bcnc.pricing'
version = '0.0.1-SNAPSHOT'

java.sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")

    // H2 in-memory DB
    runtimeOnly("com.h2database:h2")

    // Lombok
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    testCompileOnly("org.projectlombok:lombok")
    testAnnotationProcessor("org.projectlombok:lombok")

    implementation ("org.springframework.boot:spring-boot-starter-security")
    // Testing
    testImplementation("org.springframework.boot:spring-boot-starter-test")

    implementation("jakarta.persistence:jakarta.persistence-api:3.1.0")

    //Swagger
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0")

    // JSON mapper (opcional si necesitas mapear respuestas espec√≠ficas)
    implementation("com.fasterxml.jackson.core:jackson-databind")
}

tasks.test {
    useJUnitPlatform()
    finalizedBy(tasks.jacocoTestReport)
}

jacoco {
    toolVersion = "0.8.11"
}

tasks.jacocoTestReport {
    dependsOn(tasks.test)
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}

checkstyle {
    configFile = file("checkstyle.xml")
    toolVersion = "10.12.1"
    sourceSets = [sourceSets.main]
}
